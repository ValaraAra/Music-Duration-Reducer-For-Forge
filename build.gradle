buildscript {
	repositories {
		maven { url = "https://maven.minecraftforge.net" }
		maven { url = "https://plugins.gradle.org/m2/" }
		maven { url = "https://repo.spongepowered.org/maven/" }
		maven { url = "https://maven.shedaniel.me/" }
		mavenCentral()
	}
	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
		classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
	}
}
apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "org.spongepowered.mixin"


version = "3.1.0"
group = "net.ludocrypt.musicdr"
archivesBaseName = "musicdr"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: "official", version: "${minecraft_version}"
	runs {
		client {
			workingDirectory project.file("run")
			property "forge.logging.console.level", "debug"
			mods {
				musicdr {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file("run")
			property "forge.logging.console.level", "debug"
			mods {
				musicdr {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file("run")
			property "forge.logging.console.level", "debug"
			args "--mod", "musicdr", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
			mods {
				musicdr {
					source sourceSets.main
				}
			}
		}
	}
}

mixin {
	add sourceSets.main, "${archivesBaseName}.refmap.json"
	config "${archivesBaseName}.mixins.json"
}

sourceSets.main.resources { srcDir "src/generated/resources" }

repositories {
	maven { url "https://maven.shedaniel.me/" }
}

dependencies {
	minecraft "net.minecraftforge:forge:${forge_version}"
	annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
	implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${clothconfig_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

if (System.getProperty("idea.sync.active") == "true") {
	afterEvaluate {
		tasks.withType(JavaCompile).configureEach {
			it.options.annotationProcessorPath = files()
		}
	}
}

jar {
	manifest {
		attributes([
				"MixinConfigs": "${archivesBaseName}.mixins.json",
				"Implementation-Version": project.version
		])
	}
}

jar.finalizedBy("reobfJar")

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}